# ****************************************************************************
# ****************************************************************************
# Copyright SoC Design Research Group, All rights reserved.
# Electronics and Telecommunications Research Institute (ETRI)
# 
# THESE DOCUMENTS CONTAIN CONFIDENTIAL INFORMATION AND KNOWLEDGE
# WHICH IS THE PROPERTY OF ETRI. NO PART OF THIS PUBLICATION IS
# TO BE USED FOR ANY OTHER PURPOSE, AND THESE ARE NOT TO BE
# REPRODUCED, COPIED, DISCLOSED, TRANSMITTED, STORED IN A RETRIEVAL
# SYSTEM OR TRANSLATED INTO ANY OTHER HUMAN OR COMPUTER LANGUAGE,
# IN ANY FORM, BY ANY MEANS, IN WHOLE OR IN PART, WITHOUT THE
# COMPLETE PRIOR WRITTEN PERMISSION OF ETRI.
# ****************************************************************************
# 2019-04-03
# Kyuseung Han (han@etri.re.kr)
# ****************************************************************************
# ****************************************************************************

ifdef RVX_MINI_HOME
	include ./rvx_config.mh
endif

include ./rvx_init.mh
-include ./rvx_each.mh
-include ${RVX_ENV}/makefile/rvx_home.mh

PYTHON_CMD_LIST = install windows_binary ssh misc config \
									clean distclean \
									sync sync_gui sync_ocd resync \
									enable_debug disable_debug check_remote_log tool_config \
									read_only after_update \
									example \
									check

${PYTHON_CMD_LIST}:%:
	@${PYTHON3_CMD} ./rvx_install/install.py -cmd $(*)

gui:
	@java -jar ./rvx_install/rvx_remote.jar

platform_gui:
	@cd ./platform && make gui

check_mini_home:
	$(if $(RVX_MINI_HOME), , $(error RVX_MINI_HOME is NOT defined))

check_linux:
	@uname

RVX_BINARY_DIR=${CURDIR}/rvx_binary
RVX_STANDALONE_TAG=this_git_is_stand_alone
RVX_ENV_BAK_DIR=${CURDIR}/env_bak

compiler: check_linux check_mini_home
	@if [ ! -d ${RVX_BINARY_DIR} ] ; \
	then \
		git clone https://bitbucket.org/kyuseung_han/rvx_binary.git; \
		cd ${RVX_BINARY_DIR} && make --no-print-directory config; \
		cd ${RVX_BINARY_DIR} && make --no-print-directory compiler; \
		make --no-print-directory config; \
		rm -rf ./.rvx_tool_config; \
		rm -rf ./sync; \
	fi
	@echo make sync
	@make --no-print-directory sync

freeze: compiler add_freeze_tag

unfreeze: remove_freeze_tag

add_freeze_tag:
	-@touch ./${RVX_STANDALONE_TAG}

remove_freeze_tag:
	-@rm -rf ./${RVX_STANDALONE_TAG}

git_add_for_freeze:
	@git add -f ./${RVX_STANDALONE_TAG}
	@git add -f ./env

git_rm_for_unfreeze:
	-@git rm -rf ./${RVX_STANDALONE_TAG}
	-@if [ ! -d ${RVX_ENV_BAK_DIR} ] ; \
	then \
		mv ./env ./env_bak; \
	fi
	-@git rm -rf ./env
	-@rm -rf ./env
	-@mv ${RVX_ENV_BAK_DIR} ./env

freeze_git: freeze git_add_for_freeze

unfreeze_git: unfreeze git_rm_for_unfreeze

.PHONY: ${PYTHON_CMD_LIST} check_linux check_mini_home compiler
